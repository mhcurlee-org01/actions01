name: ZPA

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  get_secrets:
    runs-on: ubuntu-latest
    env:
      VENV: .venv
    steps:
      - uses: actions/checkout@v4

      # Detect system Python version for a stable cache key
      - name: Detect Python
        id: py
        run: |
          VER=$(python3 -c 'import sys; print(".".join(map(str, sys.version_info[:3])))')
          echo "ver=$VER" >> "$GITHUB_OUTPUT"

      # Cache the entire venv
      - name: Cache venv
        id: cache-venv
        uses: actions/cache@v4
        with:
          path: ${{ env.VENV }}
          key: ${{ runner.os }}-py${{ steps.py.outputs.ver }}-venv-${{ hashFiles('src/ansible/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-py${{ steps.py.outputs.ver }}-venv-

      # (Cold start only) cache pip wheels for faster installs
      - name: Cache pip (cold start only)
        if: steps.cache-venv.outputs.cache-hit != 'true'
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('src/ansible/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Create Python venv
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: python3 -m venv "$VENV"

      - name: Setup Ansible and Deps
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: |
          "$VENV/bin/python" -m pip install -U pip wheel
          "$VENV/bin/pip" install -r src/ansible/requirements.txt

      # Cache Galaxy collections/roles based onrequirements.yaml
      - name: Cache Ansible Galaxy
        id: cache-galaxy
        uses: actions/cache@v4
        with:
          path: |
            ~/.ansible/collections
            ~/.ansible/roles
          key: ${{ runner.os }}-galaxy-${{ hashFiles('src/ansible/requirements.yaml') }}
          restore-keys: |
            ${{ runner.os }}-galaxy-

      - name: Setup ZPA Collection (only if not cached)
        if: steps.cache-galaxy.outputs.cache-hit != 'true'
        run: |
          "$VENV/bin/ansible-galaxy" collection install -r src/ansible/requirements.yaml


      - name: test ansible
        run: $VENV/bin/ansible-playbook --version